<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.1.xsd
	">

	<security:debug />

	<security:http auto-config="true">
		<!-- <security:http auto-config="true" entry-point-ref="restAuthenticationEntryPoint"> -->
		<security:csrf disabled="true" />
		<!-- <security:form-login authentication-success-handler-ref="mySuccessHandler" authentication-failure-handler-ref="myFailureHandler" default-target-url="/t3.html" /> -->
		<security:logout delete-cookies="JSESSIONID" />
		<!-- <security:session-management invalid-session-url="/t1.html" > &lt;!&ndash; 第二个人登录,第一个人的认证会失效 &ndash;&gt; <security:concurrency-control max-sessions="1" /> &lt;!&ndash; 第一个人登录后,第二个人无法用相同账户登录 &ndash;&gt; &lt;!&ndash;<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>&ndash;&gt; </security:session-management> -->
		<security:intercept-url pattern="/**" access="isAuthenticated()" />

		<security:custom-filter before="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter" />
		<security:session-management>
			<security:concurrency-control max-sessions="1" />
		</security:session-management>
	</security:http>

	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

	<security:authentication-manager alias="authenticationManager">
		<!-- <security:authentication-provider ref="daoAuthenticationProvider" /> -->
	</security:authentication-manager>

	<!-- <security:authentication-manager> </security:authentication-manager> -->


	<bean id="daoAuthenticationProvider" class="com.cheuks.bin.original.web.security.DaoAuthenticationProviderImpl">
		<!--<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> -->
		<property name="passwordEncoder" ref="passwordEncoder" />
		<property name="userDetailsService" ref="UserDetailsService" />
	</bean>

	<!-- 给提交过来的密码加密 -->
	<!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> -->
	<bean id="passwordEncoder" class="com.cheuks.bin.original.web.security.DefaultPasswordEncoder" />

	<bean id="authenticationSuccessHandler" class="com.cheuks.bin.original.web.security.LoginAuthenticationSuccessHandler" />

	<!-- 登录验证处理类 -->
	<bean id="UserDetailsService" class="com.cheuks.bin.original.web.security.UserDetailsServiceImpl" />

	<bean id="restAuthenticationEntryPoint" class="com.cheuks.bin.original.web.security.RestAuthenticationEntryPoint" />

	<!-- 序列化COOKIE -->
	<bean class="org.springframework.session.web.http.DefaultCookieSerializer">
		<property name="cookieName" value="JSESSIONID"></property>
		<property name="cookiePath" value="/"></property>
		<!-- <property name="domainName" value="example.com"></property> -->
		<property name="domainNamePattern" value="^.+?\.(\w+\.[a-z]+)$"></property>
	</bean>

	<bean id="authenticationProcessingFilter" class="com.cheuks.bin.original.web.security.LoginUsernamePasswordAuthenticationFilter">
		<!-- <bean id="authenticationProcessingFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"> -->
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"></property>
		<property name="authenticationManager" ref="authenticationManager"></property>
		<!-- <property name="authenticationFailureHandler" ref="authenticationFailureHandler"></property> -->
	</bean>

</beans> 